name: deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      site-directory: ./url-shortener
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
    strategy:
      matrix:
        node-version: [ 18.x ]
    steps:
      - name: configureawscredentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::726032046446:role/github-actions-role
          role-session-name: emaillambdasession
          aws-region: ${{env.AWS_DEFAULT_REGION}}
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install
        working-directory: ${{env.site-directory}}
      - name: Build
        run: bun run build
        working-directory: ${{env.site-directory}}
      - name: Terraform fmt
        id: fmt
        working-directory: ${{ github.workspace }}/terraform
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        working-directory: ${{ github.workspace }}/terraform
        run: terraform init

      - name: Terraform Validate
        id: validate
        working-directory: ${{ github.workspace }}/terraform
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -no-color
        continue-on-error: true
        working-directory: ${{ github.workspace }}/terraform

      - name: Terraform Apply
        id: apply
        working-directory: ${{ github.workspace }}/terraform
        run: |
          terraform apply -auto-approve
      - name: Deploy
        working-directory: ${{env.site-directory}}
        run: |
          aws s3 cp ../url-shortener/dist s3://url-shortener-bucket/ --recursive
